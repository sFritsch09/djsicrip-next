package ci

import (
	"dagger.io/dagger"
	"universe.dagger.io/docker"
	"universe.dagger.io/yarn"
)

dagger.#Plan & {
	client: {
		network: "unix:///var/run/docker.sock": connect: dagger.#Socket
		env: {
			REGISTRY_DOMAIN: string
			REGISTRY_USER:   string | "_token_"
			REGISTRY_PASS:   dagger.#Secret
		}
		filesystem: {
			"./": read: {
				contents: dagger.#FS
				exclude: [".next", "node_modules", "cue.mod", "README.md", "dagger.cue", "Dockerfile", "pb.dockerfile"]
			}
			"./_build": write: {
				contents: actions.build.output
			}

		}
	}
	actions: {
		// Next Build

		// _pull: docker.#Pull & {
		//  source: "node:19.0-alpine"
		// }
		// deps: bash.#Run & {
		//  input:   _copy.output
		//  workdir: "/app"
		//  script: contents: #"""
		//   yarn install --frozen-lockfile
		//   """#
		// }
		// Install Dependencies
		// deps: yarn.#Command & {
		//  project: "deps"
		//  source:  client.filesystem."./".read.contents
		//  args: ["install", "--frozen-lockfile"]
		//  outputDir: "./src"
		//  // source: actions.source.output
		//  // name:   "install"
		// }
		// Build Next App
		build: yarn.#Script & {
			// project: "build"
			source: client.filesystem."./".read.contents
			name:   "build"
		}
		// root: bash.#Run & {
		//  input: build.output
		//  // workdir: "/app"
		//  script: contents: #"""
		//   addgroup -g 1001 -S nodejs
		//   adduser -S nextjs -u 1001
		//   chown nextjs:nodejs package.json yarn.lock node_modules public .next 
		//   sudo su - nextjs
		//   """#
		// }
		_pull: docker.#Pull & {
			source: "node:19.4.0-alpine"
		}
		// _build_group: docker.#Run & {
		//  input: actions._pull.output
		//  command: {
		//   name: "addgroup"
		//   args: ["-g", "1001", "-S", "nodejs"]
		//  }
		// }
		// _build_user: docker.#Run & {
		//  input: actions._build_group.output
		//  command: {
		//   name: "adduser"
		//   args: ["-S", "nextjs", "-u", "1001"]
		//  }
		// }
		// _build_package: docker.#Copy & {
		//  input:    actions._build_user.output
		//  contents: actions.build.output
		//  source:   "/"
		//  dest:     "/app"
		// }
		// run: docker.#Set & {
		//  input: actions._build_package.output
		//  config: {
		//   // workdir: "/app"
		//   user: "nextjs"
		//   env: NODE_ENV: "production"
		//   expose: "3000/tcp": {}
		//   cmd: ["sleep", "infinity"]
		//  }
		// }
		// copy: docker.#Copy & {
		//  input:    _pull.output
		//  contents: deps2.output
		//  dest:     "/app"
		// }

		// load: cli.#Load & {
		//  image: run.output
		//  host:  client.network."unix:///var/run/docker.sock".connect
		//  tag:   "testimage"
		// }
		// push: docker.#Push & {
		//  image: build.image
		//  dest:  client.env.REGISTRY_DOMAIN
		//  auth: {
		//   username: client.env.REGISTRY_USER
		//   secret:   client.env.REGISTRY_PASS
		//  }
		// }
	}
}
